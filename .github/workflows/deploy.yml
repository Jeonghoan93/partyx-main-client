name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        with:
          path: react/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Debug - List Root Directory Content
        run: ls -la ${{ github.workspace }}/react/

      - name: Install and Build
        run: |
          cd ${{ github.workspace }}/react
          yarn install 
          yarn build

      - name: List Root Directory Content
        run: ls -la ${{ github.workspace }}

      - name: List React Directory Content
        run: ls -la ${{ github.workspace }}/react/

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: List Root Directory Content
        run: ls -la ${{ github.workspace }}

      - name: Debug - Print current working directory
        run: pwd
        working-directory: ${{ github.workspace }}/react

      - name: Check Build Status
        run: |
          if [ -d ${{ github.workspace }}/react/dist/ ]; then
            if [ -f ${{ github.workspace }}/react/dist/index.html ]; then
              echo "Build successful, proceeding to deploy"
            else
              echo "Build failed, no index.html found"
              exit 1
            fi
          else
            echo "Build directory not found. Exiting."
            exit 1
          fi
      - name: Deploy to S3 using AWS CLI
        run: |
          aws s3 sync ${{ github.workspace }}/react/dist/ s3://partyx-frontend/ --acl bucket-owner-full-control
        env:
          AWS_S3_BUCKET: "partyx-frontend"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-north-1"

      - name: Configure AWS CLI
        run: aws configure set region eu-north-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Invalidate CloudFront Distribution
        run: |
          aws cloudfront create-invalidation --distribution-id E1KAIII2BCH8CW --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-north-1"
